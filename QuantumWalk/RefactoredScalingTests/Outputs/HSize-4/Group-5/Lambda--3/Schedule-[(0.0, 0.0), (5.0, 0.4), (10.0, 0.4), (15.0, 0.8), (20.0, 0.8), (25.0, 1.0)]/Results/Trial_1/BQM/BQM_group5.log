Pauli String:  (0.625+0j)*I+(0.3333333333333333+0j)*X2+(-0.125+0j)*Z2+(0.16666666666666666+0j)*X1*X2+(0.16666666666666666+0j)*Y1*Y2+(-0.25+0j)*Z1

Problem Hamiltonian New Subexpressions:  {(1, 1): -2*z1 - z2 + 3, (1, 2): -(-3*z1/2 + 3*z3/2)*(-z2/2 + z4/2) - (z1 + z3)*(z2*z4/2 + 1/2) - (z2/2 + z4/2)*(z1*z3/2 + 1/2) + (-3*z1*z3/2 + 3/2)*(-z2*z4/2 + 1/2) + (3*z1*z3/2 + 3/2)*(z2*z4/2 + 1/2) + (3*z1*z3 + 3)*(-z2*z4/2 + 1/2), (1, 3): -(-3*z1/2 + 3*z5/2)*(-z2/2 + z6/2) - (z1 + z5)*(z2*z6/2 + 1/2) - (z2/2 + z6/2)*(z1*z5/2 + 1/2) + (-3*z1*z5/2 + 3/2)*(-z2*z6/2 + 1/2) + (3*z1*z5/2 + 3/2)*(z2*z6/2 + 1/2) + (3*z1*z5 + 3)*(-z2*z6/2 + 1/2), (1, 4): -(-3*z1/2 + 3*z7/2)*(-z2/2 + z8/2) - (z1 + z7)*(z2*z8/2 + 1/2) - (z2/2 + z8/2)*(z1*z7/2 + 1/2) + (-3*z1*z7/2 + 3/2)*(-z2*z8/2 + 1/2) + (3*z1*z7/2 + 3/2)*(z2*z8/2 + 1/2) + (3*z1*z7 + 3)*(-z2*z8/2 + 1/2), (1, 5): -(-3*z1/2 + 3*z9/2)*(z10/2 - z2/2) - (z1 + z9)*(z10*z2/2 + 1/2) - (z10/2 + z2/2)*(z1*z9/2 + 1/2) + (-3*z1*z9/2 + 3/2)*(-z10*z2/2 + 1/2) + (3*z1*z9/2 + 3/2)*(z10*z2/2 + 1/2) + (3*z1*z9 + 3)*(-z10*z2/2 + 1/2), (2, 2): -2*z3 - z4 + 3, (2, 3): -(-3*z3/2 + 3*z5/2)*(-z4/2 + z6/2) - (z3 + z5)*(z4*z6/2 + 1/2) - (z4/2 + z6/2)*(z3*z5/2 + 1/2) + (-3*z3*z5/2 + 3/2)*(-z4*z6/2 + 1/2) + (3*z3*z5/2 + 3/2)*(z4*z6/2 + 1/2) + (3*z3*z5 + 3)*(-z4*z6/2 + 1/2), (2, 4): -(-3*z3/2 + 3*z7/2)*(-z4/2 + z8/2) - (z3 + z7)*(z4*z8/2 + 1/2) - (z4/2 + z8/2)*(z3*z7/2 + 1/2) + (-3*z3*z7/2 + 3/2)*(-z4*z8/2 + 1/2) + (3*z3*z7/2 + 3/2)*(z4*z8/2 + 1/2) + (3*z3*z7 + 3)*(-z4*z8/2 + 1/2), (2, 5): -(z10/2 + z4/2)*(z3*z9/2 + 1/2) - (3*z10/2 - 3*z4/2)*(-z3/2 + z9/2) - (z3 + z9)*(z10*z4/2 + 1/2) + (-3*z10*z4 + 3)*(z3*z9/2 + 1/2) + (-3*z10*z4/2 + 3/2)*(-z3*z9/2 + 1/2) + (3*z10*z4/2 + 3/2)*(z3*z9/2 + 1/2), (3, 3): -2*z5 - z6 + 3, (3, 4): -(-3*z5/2 + 3*z7/2)*(-z6/2 + z8/2) - (z5 + z7)*(z6*z8/2 + 1/2) - (z6/2 + z8/2)*(z5*z7/2 + 1/2) + (-3*z5*z7/2 + 3/2)*(-z6*z8/2 + 1/2) + (3*z5*z7/2 + 3/2)*(z6*z8/2 + 1/2) + (3*z5*z7 + 3)*(-z6*z8/2 + 1/2), (3, 5): -(z10/2 + z6/2)*(z5*z9/2 + 1/2) - (3*z10/2 - 3*z6/2)*(-z5/2 + z9/2) - (z5 + z9)*(z10*z6/2 + 1/2) + (-3*z10*z6 + 3)*(z5*z9/2 + 1/2) + (-3*z10*z6/2 + 3/2)*(-z5*z9/2 + 1/2) + (3*z10*z6/2 + 3/2)*(z5*z9/2 + 1/2), (4, 4): -2*z7 - z8 + 3, (4, 5): -(z10/2 + z8/2)*(z7*z9/2 + 1/2) - (3*z10/2 - 3*z8/2)*(-z7/2 + z9/2) - (z7 + z9)*(z10*z8/2 + 1/2) + (-3*z10*z8 + 3)*(z7*z9/2 + 1/2) + (-3*z10*z8/2 + 3/2)*(-z7*z9/2 + 1/2) + (3*z10*z8/2 + 3/2)*(z7*z9/2 + 1/2), (5, 5): -z10 - 2*z9 + 3}

New Hamiltonian:  2*S1*S2*(-(z1 + z3)*(z2*z4/2 + 1/2) + (3*z1/2 - 3*z3/2)*(-z2/2 + z4/2) - (z2/2 + z4/2)*(z1*z3/2 + 1/2) + (-3*z1*z3/2 + 3/2)*(-z2*z4/2 + 1/2) + (3*z1*z3/2 + 3/2)*(z2*z4/2 + 1/2) + (3*z1*z3 + 3)*(-z2*z4/2 + 1/2)) + 2*S1*S3*(-(z1 + z5)*(z2*z6/2 + 1/2) + (3*z1/2 - 3*z5/2)*(-z2/2 + z6/2) - (z2/2 + z6/2)*(z1*z5/2 + 1/2) + (-3*z1*z5/2 + 3/2)*(-z2*z6/2 + 1/2) + (3*z1*z5/2 + 3/2)*(z2*z6/2 + 1/2) + (3*z1*z5 + 3)*(-z2*z6/2 + 1/2)) + 2*S1*S4*(-(z1 + z7)*(z2*z8/2 + 1/2) + (3*z1/2 - 3*z7/2)*(-z2/2 + z8/2) - (z2/2 + z8/2)*(z1*z7/2 + 1/2) + (-3*z1*z7/2 + 3/2)*(-z2*z8/2 + 1/2) + (3*z1*z7/2 + 3/2)*(z2*z8/2 + 1/2) + (3*z1*z7 + 3)*(-z2*z8/2 + 1/2)) + 2*S1*S5*(-(z1 + z9)*(z10*z2/2 + 1/2) + (3*z1/2 - 3*z9/2)*(z10/2 - z2/2) - (z10/2 + z2/2)*(z1*z9/2 + 1/2) + (-3*z1*z9/2 + 3/2)*(-z10*z2/2 + 1/2) + (3*z1*z9/2 + 3/2)*(z10*z2/2 + 1/2) + (3*z1*z9 + 3)*(-z10*z2/2 + 1/2)) + 2*S2*S3*(-(z3 + z5)*(z4*z6/2 + 1/2) + (3*z3/2 - 3*z5/2)*(-z4/2 + z6/2) - (z4/2 + z6/2)*(z3*z5/2 + 1/2) + (-3*z3*z5/2 + 3/2)*(-z4*z6/2 + 1/2) + (3*z3*z5/2 + 3/2)*(z4*z6/2 + 1/2) + (3*z3*z5 + 3)*(-z4*z6/2 + 1/2)) + 2*S2*S4*(-(z3 + z7)*(z4*z8/2 + 1/2) + (3*z3/2 - 3*z7/2)*(-z4/2 + z8/2) - (z4/2 + z8/2)*(z3*z7/2 + 1/2) + (-3*z3*z7/2 + 3/2)*(-z4*z8/2 + 1/2) + (3*z3*z7/2 + 3/2)*(z4*z8/2 + 1/2) + (3*z3*z7 + 3)*(-z4*z8/2 + 1/2)) + 2*S2*S5*((-z10/2 - z4/2)*(z3*z9/2 + 1/2) - (3*z10/2 - 3*z4/2)*(-z3/2 + z9/2) - (z3 + z9)*(z10*z4/2 + 1/2) + (-3*z10*z4 + 3)*(z3*z9/2 + 1/2) + (-3*z10*z4/2 + 3/2)*(-z3*z9/2 + 1/2) + (3*z10*z4/2 + 3/2)*(z3*z9/2 + 1/2)) + 2*S3*S4*(-(z5 + z7)*(z6*z8/2 + 1/2) + (3*z5/2 - 3*z7/2)*(-z6/2 + z8/2) - (z6/2 + z8/2)*(z5*z7/2 + 1/2) + (-3*z5*z7/2 + 3/2)*(-z6*z8/2 + 1/2) + (3*z5*z7/2 + 3/2)*(z6*z8/2 + 1/2) + (3*z5*z7 + 3)*(-z6*z8/2 + 1/2)) + 2*S3*S5*((-z10/2 - z6/2)*(z5*z9/2 + 1/2) - (3*z10/2 - 3*z6/2)*(-z5/2 + z9/2) - (z5 + z9)*(z10*z6/2 + 1/2) + (-3*z10*z6 + 3)*(z5*z9/2 + 1/2) + (-3*z10*z6/2 + 3/2)*(-z5*z9/2 + 1/2) + (3*z10*z6/2 + 3/2)*(z5*z9/2 + 1/2)) + 2*S4*S5*((-z10/2 - z8/2)*(z7*z9/2 + 1/2) - (3*z10/2 - 3*z8/2)*(-z7/2 + z9/2) - (z7 + z9)*(z10*z8/2 + 1/2) + (-3*z10*z8 + 3)*(z7*z9/2 + 1/2) + (-3*z10*z8/2 + 3/2)*(-z7*z9/2 + 1/2) + (3*z10*z8/2 + 3/2)*(z7*z9/2 + 1/2)) - 2*z1 - z10 - z2 - 2*z3 - z4 - 2*z5 - z6 - 2*z7 - z8 - 2*z9 + 15

Cp matrix:  (S1*(1/2 - z1/2)*(1/2 - z2/2) + S2*(1/2 - z3/2)*(1/2 - z4/2) + S3*(1/2 - z5/2)*(1/2 - z6/2) + S4*(1/2 - z7/2)*(1/2 - z8/2) + S5*(1/2 - z10/2)*(1/2 - z9/2))**2 + (S1*(1/2 - z1/2)*(z2/2 + 1/2) + S2*(1/2 - z3/2)*(z4/2 + 1/2) + S3*(1/2 - z5/2)*(z6/2 + 1/2) + S4*(1/2 - z7/2)*(z8/2 + 1/2) + S5*(1/2 - z9/2)*(z10/2 + 1/2))**2 + (S1*(1/2 - z2/2)*(z1/2 + 1/2) + S2*(1/2 - z4/2)*(z3/2 + 1/2) + S3*(1/2 - z6/2)*(z5/2 + 1/2) + S4*(1/2 - z8/2)*(z7/2 + 1/2) + S5*(1/2 - z10/2)*(z9/2 + 1/2))**2 + (S1*(z1/2 + 1/2)*(z2/2 + 1/2) + S2*(z3/2 + 1/2)*(z4/2 + 1/2) + S3*(z5/2 + 1/2)*(z6/2 + 1/2) + S4*(z7/2 + 1/2)*(z8/2 + 1/2) + S5*(z10/2 + 1/2)*(z9/2 + 1/2))**2

Problem Hamiltonian New Numerical Expressions:  -2*z1 - z10 - z2 - 2*z3 - z4 - 2*z5 - z6 - 2*z7 - z8 - 2*z9 - 2*(z1 + z3)*(z2*z4/2 + 1/2) + 2*(z1 + z5)*(z2*z6/2 + 1/2) + 2*(z1 + z7)*(z2*z8/2 + 1/2) + 2*(z1 + z9)*(z10*z2/2 + 1/2) + 2*(3*z1/2 - 3*z3/2)*(-z2/2 + z4/2) - 2*(3*z1/2 - 3*z5/2)*(-z2/2 + z6/2) - 2*(3*z1/2 - 3*z7/2)*(-z2/2 + z8/2) - 2*(3*z1/2 - 3*z9/2)*(z10/2 - z2/2) - 2*(-z10/2 - z4/2)*(z3*z9/2 + 1/2) + 2*(-z10/2 - z6/2)*(z5*z9/2 + 1/2) + 2*(-z10/2 - z8/2)*(z7*z9/2 + 1/2) + 2*(z10/2 + z2/2)*(z1*z9/2 + 1/2) + 2*(3*z10/2 - 3*z4/2)*(-z3/2 + z9/2) - 2*(3*z10/2 - 3*z6/2)*(-z5/2 + z9/2) - 2*(3*z10/2 - 3*z8/2)*(-z7/2 + z9/2) - 2*(z2/2 + z4/2)*(z1*z3/2 + 1/2) + 2*(z2/2 + z6/2)*(z1*z5/2 + 1/2) + 2*(z2/2 + z8/2)*(z1*z7/2 + 1/2) + 2*(z3 + z5)*(z4*z6/2 + 1/2) + 2*(z3 + z7)*(z4*z8/2 + 1/2) + 2*(z3 + z9)*(z10*z4/2 + 1/2) - 2*(3*z3/2 - 3*z5/2)*(-z4/2 + z6/2) - 2*(3*z3/2 - 3*z7/2)*(-z4/2 + z8/2) + 2*(z4/2 + z6/2)*(z3*z5/2 + 1/2) + 2*(z4/2 + z8/2)*(z3*z7/2 + 1/2) - 2*(z5 + z7)*(z6*z8/2 + 1/2) - 2*(z5 + z9)*(z10*z6/2 + 1/2) + 2*(3*z5/2 - 3*z7/2)*(-z6/2 + z8/2) - 2*(z6/2 + z8/2)*(z5*z7/2 + 1/2) - 2*(z7 + z9)*(z10*z8/2 + 1/2) + 2*(-3*z1*z3/2 + 3/2)*(-z2*z4/2 + 1/2) + 2*(3*z1*z3/2 + 3/2)*(z2*z4/2 + 1/2) + 2*(3*z1*z3 + 3)*(-z2*z4/2 + 1/2) - 2*(-3*z1*z5/2 + 3/2)*(-z2*z6/2 + 1/2) - 2*(3*z1*z5/2 + 3/2)*(z2*z6/2 + 1/2) - 2*(3*z1*z5 + 3)*(-z2*z6/2 + 1/2) - 2*(-3*z1*z7/2 + 3/2)*(-z2*z8/2 + 1/2) - 2*(3*z1*z7/2 + 3/2)*(z2*z8/2 + 1/2) - 2*(3*z1*z7 + 3)*(-z2*z8/2 + 1/2) - 2*(-3*z1*z9/2 + 3/2)*(-z10*z2/2 + 1/2) - 2*(3*z1*z9/2 + 3/2)*(z10*z2/2 + 1/2) - 2*(3*z1*z9 + 3)*(-z10*z2/2 + 1/2) - 2*(-3*z10*z4 + 3)*(z3*z9/2 + 1/2) - 2*(-3*z10*z4/2 + 3/2)*(-z3*z9/2 + 1/2) - 2*(3*z10*z4/2 + 3/2)*(z3*z9/2 + 1/2) + 2*(-3*z10*z6 + 3)*(z5*z9/2 + 1/2) + 2*(-3*z10*z6/2 + 3/2)*(-z5*z9/2 + 1/2) + 2*(3*z10*z6/2 + 3/2)*(z5*z9/2 + 1/2) + 2*(-3*z10*z8 + 3)*(z7*z9/2 + 1/2) + 2*(-3*z10*z8/2 + 3/2)*(-z7*z9/2 + 1/2) + 2*(3*z10*z8/2 + 3/2)*(z7*z9/2 + 1/2) - 2*(-3*z3*z5/2 + 3/2)*(-z4*z6/2 + 1/2) - 2*(3*z3*z5/2 + 3/2)*(z4*z6/2 + 1/2) - 2*(3*z3*z5 + 3)*(-z4*z6/2 + 1/2) - 2*(-3*z3*z7/2 + 3/2)*(-z4*z8/2 + 1/2) - 2*(3*z3*z7/2 + 3/2)*(z4*z8/2 + 1/2) - 2*(3*z3*z7 + 3)*(-z4*z8/2 + 1/2) + 2*(-3*z5*z7/2 + 3/2)*(-z6*z8/2 + 1/2) + 2*(3*z5*z7/2 + 3/2)*(z6*z8/2 + 1/2) + 2*(3*z5*z7 + 3)*(-z6*z8/2 + 1/2) + 15

Cp Numerical Expressions:  (-(1/2 - z1/2)*(1/2 - z2/2) + (1/2 - z10/2)*(1/2 - z9/2) - (1/2 - z3/2)*(1/2 - z4/2) + (1/2 - z5/2)*(1/2 - z6/2) + (1/2 - z7/2)*(1/2 - z8/2))**2 + (-(1/2 - z1/2)*(z2/2 + 1/2) - (1/2 - z3/2)*(z4/2 + 1/2) + (1/2 - z5/2)*(z6/2 + 1/2) + (1/2 - z7/2)*(z8/2 + 1/2) + (1/2 - z9/2)*(z10/2 + 1/2))**2 + ((1/2 - z10/2)*(z9/2 + 1/2) - (1/2 - z2/2)*(z1/2 + 1/2) - (1/2 - z4/2)*(z3/2 + 1/2) + (1/2 - z6/2)*(z5/2 + 1/2) + (1/2 - z8/2)*(z7/2 + 1/2))**2 + (-(z1/2 + 1/2)*(z2/2 + 1/2) + (z10/2 + 1/2)*(z9/2 + 1/2) - (z3/2 + 1/2)*(z4/2 + 1/2) + (z5/2 + 1/2)*(z6/2 + 1/2) + (z7/2 + 1/2)*(z8/2 + 1/2))**2

Pre-Qudratized Expression:  0.75*z1**2*z2**2 + 0.75*z1**2 - 1.5*z1*z10*z2*z9 + 1.0*z1*z10*z2 + 0.5*z1*z10*z9 - 1.5*z1*z10 + 1.5*z1*z2*z3*z4 - 0.5*z1*z2*z3 - 1.0*z1*z2*z4 - 1.5*z1*z2*z5*z6 + 0.5*z1*z2*z5 + 1.0*z1*z2*z6 - 1.5*z1*z2*z7*z8 + 0.5*z1*z2*z7 + 1.0*z1*z2*z8 + 0.5*z1*z2*z9 + 3.0*z1*z2 - 0.5*z1*z3*z4 + 4.5*z1*z3 + 1.5*z1*z4 + 0.5*z1*z5*z6 - 4.5*z1*z5 - 1.5*z1*z6 + 0.5*z1*z7*z8 - 4.5*z1*z7 - 1.5*z1*z8 - 4.5*z1*z9 + 0.75*z10**2*z9**2 + 0.75*z10**2 + 1.0*z10*z2*z9 + 1.5*z10*z2 - 1.5*z10*z3*z4*z9 + 1.0*z10*z3*z4 + 0.5*z10*z3*z9 - 1.5*z10*z3 + 1.0*z10*z4*z9 + 1.5*z10*z4 + 1.5*z10*z5*z6*z9 - 1.0*z10*z5*z6 - 0.5*z10*z5*z9 + 1.5*z10*z5 - 1.0*z10*z6*z9 - 1.5*z10*z6 + 1.5*z10*z7*z8*z9 - 1.0*z10*z7*z8 - 0.5*z10*z7*z9 + 1.5*z10*z7 - 1.0*z10*z8*z9 - 1.5*z10*z8 - 1.0*z10 + 0.75*z2**2 - 1.0*z2*z3*z4 + 1.5*z2*z3 - 1.5*z2*z4 + 1.0*z2*z5*z6 - 1.5*z2*z5 + 1.5*z2*z6 + 1.0*z2*z7*z8 - 1.5*z2*z7 + 1.5*z2*z8 - 1.5*z2*z9 + 0.75*z3**2*z4**2 + 0.75*z3**2 - 1.5*z3*z4*z5*z6 + 0.5*z3*z4*z5 + 1.0*z3*z4*z6 - 1.5*z3*z4*z7*z8 + 0.5*z3*z4*z7 + 1.0*z3*z4*z8 + 0.5*z3*z4*z9 + 3.0*z3*z4 + 0.5*z3*z5*z6 - 4.5*z3*z5 - 1.5*z3*z6 + 0.5*z3*z7*z8 - 4.5*z3*z7 - 1.5*z3*z8 - 4.5*z3*z9 + 0.75*z4**2 + 1.0*z4*z5*z6 - 1.5*z4*z5 + 1.5*z4*z6 + 1.0*z4*z7*z8 - 1.5*z4*z7 + 1.5*z4*z8 - 1.5*z4*z9 + 0.75*z5**2*z6**2 + 0.75*z5**2 + 1.5*z5*z6*z7*z8 - 0.5*z5*z6*z7 - 1.0*z5*z6*z8 - 0.5*z5*z6*z9 - 0.5*z5*z7*z8 + 4.5*z5*z7 + 1.5*z5*z8 + 4.5*z5*z9 - 2.0*z5 + 0.75*z6**2 - 1.0*z6*z7*z8 + 1.5*z6*z7 - 1.5*z6*z8 + 1.5*z6*z9 - 1.0*z6 + 0.75*z7**2*z8**2 + 0.75*z7**2 - 0.5*z7*z8*z9 + 4.5*z7*z9 - 2.0*z7 + 0.75*z8**2 + 1.5*z8*z9 - 1.0*z8 + 0.75*z9**2 - 2.0*z9 + 3.75

Quadratized Expression:  1798.0*b1*b10 - 3632.0*b1*b11 - 3632.0*b1*b12 - 3632.0*b1*b13 - 3632.0*b1*b14 - 16.0*b1*b16 + 1804.0*b1*b2 + 28.0*b1*b3 + 18.0*b1*b4 + 1788.0*b1*b5 - 18.0*b1*b6 + 1788.0*b1*b7 - 18.0*b1*b8 - 28.0*b1*b9 + 32.0*b1 - 3632.0*b10*b11 - 3632.0*b10*b15 - 3632.0*b10*b19 + 1808.0*b10*b2 - 3632.0*b10*b20 - 3632.0*b10*b25 - 3632.0*b10*b26 + 1798.0*b10*b3 - 3632.0*b10*b30 - 3632.0*b10*b31 + 1808.0*b10*b4 + 1834.0*b10*b5 + 1824.0*b10*b6 + 1834.0*b10*b7 + 1824.0*b10*b8 - 2.0*b10 + 1836.0*b11*b2 - 3632.0*b11*b32 + 16.0*b11*b9 + 5448.0*b11 + 24.0*b12*b16 - 3632.0*b12*b2 - 24.0*b12*b27 - 24.0*b12*b29 - 16.0*b12*b3 - 20.0*b12*b4 + 16.0*b12*b5 + 20.0*b12*b6 + 16.0*b12*b7 + 20.0*b12*b8 + 16.0*b12*b9 + 5448.0*b12 - 3632.0*b13*b5 + 16.0*b13*b6 + 5448.0*b13 - 3632.0*b14*b7 + 16.0*b14*b8 + 5448.0*b14 - 3632.0*b15*b3 - 3632.0*b15*b33 + 1836.0*b15*b4 + 16.0*b15*b9 + 5448.0*b15 - 20.0*b16*b2 - 24.0*b16*b27 - 24.0*b16*b29 - 3632.0*b16*b3 - 3632.0*b16*b4 + 16.0*b16*b5 + 20.0*b16*b6 + 16.0*b16*b7 + 20.0*b16*b8 + 16.0*b16*b9 + 5448.0*b16 - 3632.0*b17*b3 - 3632.0*b17*b5 + 16.0*b17*b6 + 5448.0*b17 - 3632.0*b18*b3 - 3632.0*b18*b7 + 16.0*b18*b8 + 5448.0*b18 - 3632.0*b19*b2 + 20.0*b19*b9 + 5448.0*b19 - 3632.0*b2*b21 - 3632.0*b2*b22 + 18.0*b2*b3 - 3632.0*b2*b32 + 8.0*b2*b4 + 1798.0*b2*b5 - 8.0*b2*b6 + 1798.0*b2*b7 - 8.0*b2*b8 - 18.0*b2*b9 + 10.0*b2 - 3632.0*b20*b4 + 20.0*b20*b9 + 5448.0*b20 - 3632.0*b21*b5 + 20.0*b21*b6 + 5448.0*b21 - 3632.0*b22*b7 + 20.0*b22*b8 + 5448.0*b22 - 3632.0*b23*b4 - 3632.0*b23*b5 + 20.0*b23*b6 + 5448.0*b23 - 3632.0*b24*b4 - 3632.0*b24*b7 + 20.0*b24*b8 + 5448.0*b24 - 3632.0*b25*b34 - 3632.0*b25*b5 + 1796.0*b25*b6 - 16.0*b25*b9 + 5448.0*b25 - 3632.0*b26*b35 - 3632.0*b26*b7 + 1796.0*b26*b8 - 16.0*b26*b9 + 5448.0*b26 + 24.0*b27*b29 - 3632.0*b27*b5 - 3632.0*b27*b6 - 16.0*b27*b7 - 20.0*b27*b8 - 16.0*b27*b9 + 5448.0*b27 - 3632.0*b28*b5 - 3632.0*b28*b7 - 16.0*b28*b8 + 5448.0*b28 - 20.0*b29*b6 - 3632.0*b29*b7 - 3632.0*b29*b8 - 16.0*b29*b9 + 5448.0*b29 + 1804.0*b3*b4 + 1788.0*b3*b5 - 18.0*b3*b6 + 1788.0*b3*b7 - 18.0*b3*b8 - 28.0*b3*b9 + 32.0*b3 - 3632.0*b30*b6 - 20.0*b30*b9 + 5448.0*b30 - 3632.0*b31*b8 - 20.0*b31*b9 + 5448.0*b31 - 24.0*b32*b9 + 5448.0*b32 - 3632.0*b33*b4 - 24.0*b33*b9 + 5448.0*b33 - 3632.0*b34*b6 + 24.0*b34*b9 + 5448.0*b34 - 3632.0*b35*b8 + 24.0*b35*b9 + 5448.0*b35 + 1798.0*b4*b5 - 8.0*b4*b6 + 1798.0*b4*b7 - 8.0*b4*b8 - 18.0*b4*b9 + 10.0*b4 + 1816.0*b5*b6 + 1844.0*b5*b7 + 18.0*b5*b8 + 28.0*b5*b9 - 4.0*b5 + 18.0*b6*b7 + 8.0*b6*b8 + 18.0*b6*b9 - 2.0*b6 + 1816.0*b7*b8 + 28.0*b7*b9 - 4.0*b7 + 18.0*b8*b9 - 2.0*b8 - 4.0*b9 + 9.0

Final BQM:  BinaryQuadraticModel({'b2': 10.0, 'b4': 10.0, 'b6': -2.0, 'b8': -2.0, 'b11': 5448.0, 'b9': -4.0, 'b12': 5448.0, 'b5': -4.0, 'b7': -4.0, 'b13': 5448.0, 'b14': 5448.0, 'b15': 5448.0, 'b16': 5448.0, 'b17': 5448.0, 'b18': 5448.0, 'b27': 5448.0, 'b29': 5448.0, 'b34': 5448.0, 'b35': 5448.0, 'b19': 5448.0, 'b20': 5448.0, 'b21': 5448.0, 'b22': 5448.0, 'b23': 5448.0, 'b24': 5448.0, 'b1': 32.0, 'b3': 32.0, 'b10': -2.0, 'b25': 5448.0, 'b26': 5448.0, 'b28': 5448.0, 'b32': 5448.0, 'b33': 5448.0, 'b30': 5448.0, 'b31': 5448.0}, {('b4', 'b2'): 8.0, ('b6', 'b2'): -8.0, ('b6', 'b4'): -8.0, ('b8', 'b2'): -8.0, ('b8', 'b4'): -8.0, ('b8', 'b6'): 8.0, ('b11', 'b2'): 1836.0, ('b9', 'b2'): -18.0, ('b9', 'b4'): -18.0, ('b9', 'b6'): 18.0, ('b9', 'b8'): 18.0, ('b9', 'b11'): 16.0, ('b12', 'b2'): -3632.0, ('b12', 'b4'): -20.0, ('b12', 'b6'): 20.0, ('b12', 'b8'): 20.0, ('b12', 'b9'): 16.0, ('b5', 'b2'): 1798.0, ('b5', 'b4'): 1798.0, ('b5', 'b6'): 1816.0, ('b5', 'b8'): 18.0, ('b5', 'b9'): 28.0, ('b5', 'b12'): 16.0, ('b7', 'b2'): 1798.0, ('b7', 'b4'): 1798.0, ('b7', 'b6'): 18.0, ('b7', 'b8'): 1816.0, ('b7', 'b9'): 28.0, ('b7', 'b12'): 16.0, ('b7', 'b5'): 1844.0, ('b13', 'b6'): 16.0, ('b13', 'b5'): -3632.0, ('b14', 'b8'): 16.0, ('b14', 'b7'): -3632.0, ('b15', 'b4'): 1836.0, ('b15', 'b9'): 16.0, ('b16', 'b2'): -20.0, ('b16', 'b4'): -3632.0, ('b16', 'b6'): 20.0, ('b16', 'b8'): 20.0, ('b16', 'b9'): 16.0, ('b16', 'b12'): 24.0, ('b16', 'b5'): 16.0, ('b16', 'b7'): 16.0, ('b17', 'b6'): 16.0, ('b17', 'b5'): -3632.0, ('b18', 'b8'): 16.0, ('b18', 'b7'): -3632.0, ('b27', 'b6'): -3632.0, ('b27', 'b8'): -20.0, ('b27', 'b9'): -16.0, ('b27', 'b12'): -24.0, ('b27', 'b5'): -3632.0, ('b27', 'b7'): -16.0, ('b27', 'b16'): -24.0, ('b29', 'b6'): -20.0, ('b29', 'b8'): -3632.0, ('b29', 'b9'): -16.0, ('b29', 'b12'): -24.0, ('b29', 'b7'): -3632.0, ('b29', 'b16'): -24.0, ('b29', 'b27'): 24.0, ('b34', 'b6'): -3632.0, ('b34', 'b9'): 24.0, ('b35', 'b8'): -3632.0, ('b35', 'b9'): 24.0, ('b19', 'b2'): -3632.0, ('b19', 'b9'): 20.0, ('b20', 'b4'): -3632.0, ('b20', 'b9'): 20.0, ('b21', 'b2'): -3632.0, ('b21', 'b6'): 20.0, ('b21', 'b5'): -3632.0, ('b22', 'b2'): -3632.0, ('b22', 'b8'): 20.0, ('b22', 'b7'): -3632.0, ('b23', 'b4'): -3632.0, ('b23', 'b6'): 20.0, ('b23', 'b5'): -3632.0, ('b24', 'b4'): -3632.0, ('b24', 'b8'): 20.0, ('b24', 'b7'): -3632.0, ('b1', 'b2'): 1804.0, ('b1', 'b4'): 18.0, ('b1', 'b6'): -18.0, ('b1', 'b8'): -18.0, ('b1', 'b11'): -3632.0, ('b1', 'b9'): -28.0, ('b1', 'b12'): -3632.0, ('b1', 'b5'): 1788.0, ('b1', 'b7'): 1788.0, ('b1', 'b13'): -3632.0, ('b1', 'b14'): -3632.0, ('b1', 'b16'): -16.0, ('b3', 'b2'): 18.0, ('b3', 'b4'): 1804.0, ('b3', 'b6'): -18.0, ('b3', 'b8'): -18.0, ('b3', 'b9'): -28.0, ('b3', 'b12'): -16.0, ('b3', 'b5'): 1788.0, ('b3', 'b7'): 1788.0, ('b3', 'b15'): -3632.0, ('b3', 'b16'): -3632.0, ('b3', 'b17'): -3632.0, ('b3', 'b18'): -3632.0, ('b3', 'b1'): 28.0, ('b10', 'b2'): 1808.0, ('b10', 'b4'): 1808.0, ('b10', 'b6'): 1824.0, ('b10', 'b8'): 1824.0, ('b10', 'b11'): -3632.0, ('b10', 'b5'): 1834.0, ('b10', 'b7'): 1834.0, ('b10', 'b15'): -3632.0, ('b10', 'b19'): -3632.0, ('b10', 'b20'): -3632.0, ('b10', 'b1'): 1798.0, ('b10', 'b3'): 1798.0, ('b25', 'b6'): 1796.0, ('b25', 'b9'): -16.0, ('b25', 'b5'): -3632.0, ('b25', 'b34'): -3632.0, ('b25', 'b10'): -3632.0, ('b26', 'b8'): 1796.0, ('b26', 'b9'): -16.0, ('b26', 'b7'): -3632.0, ('b26', 'b35'): -3632.0, ('b26', 'b10'): -3632.0, ('b28', 'b8'): -16.0, ('b28', 'b5'): -3632.0, ('b28', 'b7'): -3632.0, ('b32', 'b2'): -3632.0, ('b32', 'b11'): -3632.0, ('b32', 'b9'): -24.0, ('b33', 'b4'): -3632.0, ('b33', 'b9'): -24.0, ('b33', 'b15'): -3632.0, ('b30', 'b6'): -3632.0, ('b30', 'b9'): -20.0, ('b30', 'b10'): -3632.0, ('b31', 'b8'): -3632.0, ('b31', 'b9'): -20.0, ('b31', 'b10'): -3632.0}, 9.0, 'BINARY')

Sign Values:  [-1, -1, 1, 1, 1]

Number of New Groups:  5

Number of Original Variables:  10

Cp Numerical Expressions:  (-(1/2 - z1/2)*(1/2 - z2/2) + (1/2 - z10/2)*(1/2 - z9/2) - (1/2 - z3/2)*(1/2 - z4/2) + (1/2 - z5/2)*(1/2 - z6/2) + (1/2 - z7/2)*(1/2 - z8/2))**2 + (-(1/2 - z1/2)*(z2/2 + 1/2) - (1/2 - z3/2)*(z4/2 + 1/2) + (1/2 - z5/2)*(z6/2 + 1/2) + (1/2 - z7/2)*(z8/2 + 1/2) + (1/2 - z9/2)*(z10/2 + 1/2))**2 + ((1/2 - z10/2)*(z9/2 + 1/2) - (1/2 - z2/2)*(z1/2 + 1/2) - (1/2 - z4/2)*(z3/2 + 1/2) + (1/2 - z6/2)*(z5/2 + 1/2) + (1/2 - z8/2)*(z7/2 + 1/2))**2 + (-(z1/2 + 1/2)*(z2/2 + 1/2) + (z10/2 + 1/2)*(z9/2 + 1/2) - (z3/2 + 1/2)*(z4/2 + 1/2) + (z5/2 + 1/2)*(z6/2 + 1/2) + (z7/2 + 1/2)*(z8/2 + 1/2))**2

Original Variables:  {z9, z7, z4, z1, z3, z6, z10, z8, z2, z5}

Lambda:  -3
################# BQM GENERATED #################