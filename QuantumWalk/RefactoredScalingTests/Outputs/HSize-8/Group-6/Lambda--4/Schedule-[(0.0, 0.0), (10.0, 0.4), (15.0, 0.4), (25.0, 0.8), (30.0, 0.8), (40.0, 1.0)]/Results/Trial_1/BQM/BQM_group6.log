Pauli String:  (0.5625+0j)*I+(0.3333333333333333+0j)*X3+(-0.0625+0j)*Z3+(0.16666666666666666+0j)*X2*X3+(0.16666666666666666+0j)*Y2*Y3+(-0.125+0j)*Z2+(0.08333333333333333+0j)*X1*X2*X3+(-0.08333333333333333+0j)*X1*Y2*Y3+(0.08333333333333333+0j)*Y1*X2*Y3+(0.08333333333333333+0j)*Y1*Y2*X3+(-0.25+0j)*Z1

Problem Hamiltonian New Subexpressions:  {(1, 1): -2*z1 - z2 + 3, (1, 2): -(-3*z1/2 + 3*z3/2)*(-z2/2 + z4/2) - (z1 + z3)*(z2*z4/2 + 1/2) - (z2/2 + z4/2)*(z1*z3/2 + 1/2) + (-3*z1*z3/2 + 3/2)*(-z2*z4/2 + 1/2) + (3*z1*z3/2 + 3/2)*(z2*z4/2 + 1/2) + (3*z1*z3 + 3)*(-z2*z4/2 + 1/2), (1, 3): -(-3*z1/2 + 3*z5/2)*(-z2/2 + z6/2) - (z1 + z5)*(z2*z6/2 + 1/2) - (z2/2 + z6/2)*(z1*z5/2 + 1/2) + (-3*z1*z5/2 + 3/2)*(-z2*z6/2 + 1/2) + (3*z1*z5/2 + 3/2)*(z2*z6/2 + 1/2) + (3*z1*z5 + 3)*(-z2*z6/2 + 1/2), (1, 4): -(-3*z1/2 + 3*z7/2)*(-z2/2 + z8/2) - (z1 + z7)*(z2*z8/2 + 1/2) - (z2/2 + z8/2)*(z1*z7/2 + 1/2) + (-3*z1*z7/2 + 3/2)*(-z2*z8/2 + 1/2) + (3*z1*z7/2 + 3/2)*(z2*z8/2 + 1/2) + (3*z1*z7 + 3)*(-z2*z8/2 + 1/2), (1, 5): -(-3*z1/2 + 3*z9/2)*(z10/2 - z2/2) - (z1 + z9)*(z10*z2/2 + 1/2) - (z10/2 + z2/2)*(z1*z9/2 + 1/2) + (-3*z1*z9/2 + 3/2)*(-z10*z2/2 + 1/2) + (3*z1*z9/2 + 3/2)*(z10*z2/2 + 1/2) + (3*z1*z9 + 3)*(-z10*z2/2 + 1/2), (1, 6): -(-3*z1/2 + 3*z11/2)*(z12/2 - z2/2) - (z1 + z11)*(z12*z2/2 + 1/2) - (z12/2 + z2/2)*(z1*z11/2 + 1/2) + (-3*z1*z11/2 + 3/2)*(-z12*z2/2 + 1/2) + (3*z1*z11/2 + 3/2)*(z12*z2/2 + 1/2) + (3*z1*z11 + 3)*(-z12*z2/2 + 1/2), (2, 2): -2*z3 - z4 + 3, (2, 3): -(-3*z3/2 + 3*z5/2)*(-z4/2 + z6/2) - (z3 + z5)*(z4*z6/2 + 1/2) - (z4/2 + z6/2)*(z3*z5/2 + 1/2) + (-3*z3*z5/2 + 3/2)*(-z4*z6/2 + 1/2) + (3*z3*z5/2 + 3/2)*(z4*z6/2 + 1/2) + (3*z3*z5 + 3)*(-z4*z6/2 + 1/2), (2, 4): -(-3*z3/2 + 3*z7/2)*(-z4/2 + z8/2) - (z3 + z7)*(z4*z8/2 + 1/2) - (z4/2 + z8/2)*(z3*z7/2 + 1/2) + (-3*z3*z7/2 + 3/2)*(-z4*z8/2 + 1/2) + (3*z3*z7/2 + 3/2)*(z4*z8/2 + 1/2) + (3*z3*z7 + 3)*(-z4*z8/2 + 1/2), (2, 5): -(z10/2 + z4/2)*(z3*z9/2 + 1/2) - (3*z10/2 - 3*z4/2)*(-z3/2 + z9/2) - (z3 + z9)*(z10*z4/2 + 1/2) + (-3*z10*z4 + 3)*(z3*z9/2 + 1/2) + (-3*z10*z4/2 + 3/2)*(-z3*z9/2 + 1/2) + (3*z10*z4/2 + 3/2)*(z3*z9/2 + 1/2), (2, 6): -(z11 + z3)*(z12*z4/2 + 1/2) - (3*z11/2 - 3*z3/2)*(z12/2 - z4/2) - (z12/2 + z4/2)*(z11*z3/2 + 1/2) + (-3*z11*z3/2 + 3/2)*(-z12*z4/2 + 1/2) + (3*z11*z3/2 + 3/2)*(z12*z4/2 + 1/2) + (3*z11*z3 + 3)*(-z12*z4/2 + 1/2), (3, 3): -2*z5 - z6 + 3, (3, 4): -(-3*z5/2 + 3*z7/2)*(-z6/2 + z8/2) - (z5 + z7)*(z6*z8/2 + 1/2) - (z6/2 + z8/2)*(z5*z7/2 + 1/2) + (-3*z5*z7/2 + 3/2)*(-z6*z8/2 + 1/2) + (3*z5*z7/2 + 3/2)*(z6*z8/2 + 1/2) + (3*z5*z7 + 3)*(-z6*z8/2 + 1/2), (3, 5): -(z10/2 + z6/2)*(z5*z9/2 + 1/2) - (3*z10/2 - 3*z6/2)*(-z5/2 + z9/2) - (z5 + z9)*(z10*z6/2 + 1/2) + (-3*z10*z6 + 3)*(z5*z9/2 + 1/2) + (-3*z10*z6/2 + 3/2)*(-z5*z9/2 + 1/2) + (3*z10*z6/2 + 3/2)*(z5*z9/2 + 1/2), (3, 6): -(z11 + z5)*(z12*z6/2 + 1/2) - (3*z11/2 - 3*z5/2)*(z12/2 - z6/2) - (z12/2 + z6/2)*(z11*z5/2 + 1/2) + (-3*z11*z5/2 + 3/2)*(-z12*z6/2 + 1/2) + (3*z11*z5/2 + 3/2)*(z12*z6/2 + 1/2) + (3*z11*z5 + 3)*(-z12*z6/2 + 1/2), (4, 4): -2*z7 - z8 + 3, (4, 5): -(z10/2 + z8/2)*(z7*z9/2 + 1/2) - (3*z10/2 - 3*z8/2)*(-z7/2 + z9/2) - (z7 + z9)*(z10*z8/2 + 1/2) + (-3*z10*z8 + 3)*(z7*z9/2 + 1/2) + (-3*z10*z8/2 + 3/2)*(-z7*z9/2 + 1/2) + (3*z10*z8/2 + 3/2)*(z7*z9/2 + 1/2), (4, 6): -(z11 + z7)*(z12*z8/2 + 1/2) - (3*z11/2 - 3*z7/2)*(z12/2 - z8/2) - (z12/2 + z8/2)*(z11*z7/2 + 1/2) + (-3*z11*z7/2 + 3/2)*(-z12*z8/2 + 1/2) + (3*z11*z7/2 + 3/2)*(z12*z8/2 + 1/2) + (3*z11*z7 + 3)*(-z12*z8/2 + 1/2), (5, 5): -z10 - 2*z9 + 3, (5, 6): -(-3*z10/2 + 3*z12/2)*(z11/2 - z9/2) - (z10/2 + z12/2)*(z11*z9/2 + 1/2) - (z11 + z9)*(z10*z12/2 + 1/2) + (-3*z10*z12 + 3)*(z11*z9/2 + 1/2) + (-3*z10*z12/2 + 3/2)*(-z11*z9/2 + 1/2) + (3*z10*z12/2 + 3/2)*(z11*z9/2 + 1/2), (6, 6): -2*z11 - z12 + 3}

New Hamiltonian:  2*S1*S2*(-(z1 + z3)*(z2*z4/2 + 1/2) + (3*z1/2 - 3*z3/2)*(-z2/2 + z4/2) - (z2/2 + z4/2)*(z1*z3/2 + 1/2) + (-3*z1*z3/2 + 3/2)*(-z2*z4/2 + 1/2) + (3*z1*z3/2 + 3/2)*(z2*z4/2 + 1/2) + (3*z1*z3 + 3)*(-z2*z4/2 + 1/2)) + 2*S1*S3*(-(z1 + z5)*(z2*z6/2 + 1/2) + (3*z1/2 - 3*z5/2)*(-z2/2 + z6/2) - (z2/2 + z6/2)*(z1*z5/2 + 1/2) + (-3*z1*z5/2 + 3/2)*(-z2*z6/2 + 1/2) + (3*z1*z5/2 + 3/2)*(z2*z6/2 + 1/2) + (3*z1*z5 + 3)*(-z2*z6/2 + 1/2)) + 2*S1*S4*(-(z1 + z7)*(z2*z8/2 + 1/2) + (3*z1/2 - 3*z7/2)*(-z2/2 + z8/2) - (z2/2 + z8/2)*(z1*z7/2 + 1/2) + (-3*z1*z7/2 + 3/2)*(-z2*z8/2 + 1/2) + (3*z1*z7/2 + 3/2)*(z2*z8/2 + 1/2) + (3*z1*z7 + 3)*(-z2*z8/2 + 1/2)) + 2*S1*S5*(-(z1 + z9)*(z10*z2/2 + 1/2) + (3*z1/2 - 3*z9/2)*(z10/2 - z2/2) - (z10/2 + z2/2)*(z1*z9/2 + 1/2) + (-3*z1*z9/2 + 3/2)*(-z10*z2/2 + 1/2) + (3*z1*z9/2 + 3/2)*(z10*z2/2 + 1/2) + (3*z1*z9 + 3)*(-z10*z2/2 + 1/2)) + 2*S1*S6*(-(z1 + z11)*(z12*z2/2 + 1/2) + (3*z1/2 - 3*z11/2)*(z12/2 - z2/2) - (z12/2 + z2/2)*(z1*z11/2 + 1/2) + (-3*z1*z11/2 + 3/2)*(-z12*z2/2 + 1/2) + (3*z1*z11/2 + 3/2)*(z12*z2/2 + 1/2) + (3*z1*z11 + 3)*(-z12*z2/2 + 1/2)) + 2*S2*S3*(-(z3 + z5)*(z4*z6/2 + 1/2) + (3*z3/2 - 3*z5/2)*(-z4/2 + z6/2) - (z4/2 + z6/2)*(z3*z5/2 + 1/2) + (-3*z3*z5/2 + 3/2)*(-z4*z6/2 + 1/2) + (3*z3*z5/2 + 3/2)*(z4*z6/2 + 1/2) + (3*z3*z5 + 3)*(-z4*z6/2 + 1/2)) + 2*S2*S4*(-(z3 + z7)*(z4*z8/2 + 1/2) + (3*z3/2 - 3*z7/2)*(-z4/2 + z8/2) - (z4/2 + z8/2)*(z3*z7/2 + 1/2) + (-3*z3*z7/2 + 3/2)*(-z4*z8/2 + 1/2) + (3*z3*z7/2 + 3/2)*(z4*z8/2 + 1/2) + (3*z3*z7 + 3)*(-z4*z8/2 + 1/2)) + 2*S2*S5*((-z10/2 - z4/2)*(z3*z9/2 + 1/2) - (3*z10/2 - 3*z4/2)*(-z3/2 + z9/2) - (z3 + z9)*(z10*z4/2 + 1/2) + (-3*z10*z4 + 3)*(z3*z9/2 + 1/2) + (-3*z10*z4/2 + 3/2)*(-z3*z9/2 + 1/2) + (3*z10*z4/2 + 3/2)*(z3*z9/2 + 1/2)) + 2*S2*S6*((-z11 - z3)*(z12*z4/2 + 1/2) - (3*z11/2 - 3*z3/2)*(z12/2 - z4/2) - (z12/2 + z4/2)*(z11*z3/2 + 1/2) + (-3*z11*z3/2 + 3/2)*(-z12*z4/2 + 1/2) + (3*z11*z3/2 + 3/2)*(z12*z4/2 + 1/2) + (3*z11*z3 + 3)*(-z12*z4/2 + 1/2)) + 2*S3*S4*(-(z5 + z7)*(z6*z8/2 + 1/2) + (3*z5/2 - 3*z7/2)*(-z6/2 + z8/2) - (z6/2 + z8/2)*(z5*z7/2 + 1/2) + (-3*z5*z7/2 + 3/2)*(-z6*z8/2 + 1/2) + (3*z5*z7/2 + 3/2)*(z6*z8/2 + 1/2) + (3*z5*z7 + 3)*(-z6*z8/2 + 1/2)) + 2*S3*S5*((-z10/2 - z6/2)*(z5*z9/2 + 1/2) - (3*z10/2 - 3*z6/2)*(-z5/2 + z9/2) - (z5 + z9)*(z10*z6/2 + 1/2) + (-3*z10*z6 + 3)*(z5*z9/2 + 1/2) + (-3*z10*z6/2 + 3/2)*(-z5*z9/2 + 1/2) + (3*z10*z6/2 + 3/2)*(z5*z9/2 + 1/2)) + 2*S3*S6*((-z11 - z5)*(z12*z6/2 + 1/2) - (3*z11/2 - 3*z5/2)*(z12/2 - z6/2) - (z12/2 + z6/2)*(z11*z5/2 + 1/2) + (-3*z11*z5/2 + 3/2)*(-z12*z6/2 + 1/2) + (3*z11*z5/2 + 3/2)*(z12*z6/2 + 1/2) + (3*z11*z5 + 3)*(-z12*z6/2 + 1/2)) + 2*S4*S5*((-z10/2 - z8/2)*(z7*z9/2 + 1/2) - (3*z10/2 - 3*z8/2)*(-z7/2 + z9/2) - (z7 + z9)*(z10*z8/2 + 1/2) + (-3*z10*z8 + 3)*(z7*z9/2 + 1/2) + (-3*z10*z8/2 + 3/2)*(-z7*z9/2 + 1/2) + (3*z10*z8/2 + 3/2)*(z7*z9/2 + 1/2)) + 2*S4*S6*((-z11 - z7)*(z12*z8/2 + 1/2) - (3*z11/2 - 3*z7/2)*(z12/2 - z8/2) - (z12/2 + z8/2)*(z11*z7/2 + 1/2) + (-3*z11*z7/2 + 3/2)*(-z12*z8/2 + 1/2) + (3*z11*z7/2 + 3/2)*(z12*z8/2 + 1/2) + (3*z11*z7 + 3)*(-z12*z8/2 + 1/2)) + 2*S5*S6*(-(z10/2 + z12/2)*(z11*z9/2 + 1/2) + (3*z10/2 - 3*z12/2)*(z11/2 - z9/2) - (z11 + z9)*(z10*z12/2 + 1/2) + (-3*z10*z12 + 3)*(z11*z9/2 + 1/2) + (-3*z10*z12/2 + 3/2)*(-z11*z9/2 + 1/2) + (3*z10*z12/2 + 3/2)*(z11*z9/2 + 1/2)) - 2*z1 - z10 - 2*z11 - z12 - z2 - 2*z3 - z4 - 2*z5 - z6 - 2*z7 - z8 - 2*z9 + 18

Cp matrix:  (S1*(1/2 - z1/2)*(1/2 - z2/2) + S2*(1/2 - z3/2)*(1/2 - z4/2) + S3*(1/2 - z5/2)*(1/2 - z6/2) + S4*(1/2 - z7/2)*(1/2 - z8/2) + S5*(1/2 - z10/2)*(1/2 - z9/2) + S6*(1/2 - z11/2)*(1/2 - z12/2))**2 + (S1*(1/2 - z1/2)*(z2/2 + 1/2) + S2*(1/2 - z3/2)*(z4/2 + 1/2) + S3*(1/2 - z5/2)*(z6/2 + 1/2) + S4*(1/2 - z7/2)*(z8/2 + 1/2) + S5*(1/2 - z9/2)*(z10/2 + 1/2) + S6*(1/2 - z11/2)*(z12/2 + 1/2))**2 + (S1*(1/2 - z2/2)*(z1/2 + 1/2) + S2*(1/2 - z4/2)*(z3/2 + 1/2) + S3*(1/2 - z6/2)*(z5/2 + 1/2) + S4*(1/2 - z8/2)*(z7/2 + 1/2) + S5*(1/2 - z10/2)*(z9/2 + 1/2) + S6*(1/2 - z12/2)*(z11/2 + 1/2))**2 + (S1*(z1/2 + 1/2)*(z2/2 + 1/2) + S2*(z3/2 + 1/2)*(z4/2 + 1/2) + S3*(z5/2 + 1/2)*(z6/2 + 1/2) + S4*(z7/2 + 1/2)*(z8/2 + 1/2) + S5*(z10/2 + 1/2)*(z9/2 + 1/2) + S6*(z11/2 + 1/2)*(z12/2 + 1/2))**2

Problem Hamiltonian New Numerical Expressions:  -2*z1 - z10 - 2*z11 - z12 - z2 - 2*z3 - z4 - 2*z5 - z6 - 2*z7 - z8 - 2*z9 + 2*(z1 + z11)*(z12*z2/2 + 1/2) - 2*(z1 + z3)*(z2*z4/2 + 1/2) - 2*(z1 + z5)*(z2*z6/2 + 1/2) + 2*(z1 + z7)*(z2*z8/2 + 1/2) + 2*(z1 + z9)*(z10*z2/2 + 1/2) - 2*(3*z1/2 - 3*z11/2)*(z12/2 - z2/2) + 2*(3*z1/2 - 3*z3/2)*(-z2/2 + z4/2) + 2*(3*z1/2 - 3*z5/2)*(-z2/2 + z6/2) - 2*(3*z1/2 - 3*z7/2)*(-z2/2 + z8/2) - 2*(3*z1/2 - 3*z9/2)*(z10/2 - z2/2) - 2*(-z10/2 - z4/2)*(z3*z9/2 + 1/2) - 2*(-z10/2 - z6/2)*(z5*z9/2 + 1/2) + 2*(-z10/2 - z8/2)*(z7*z9/2 + 1/2) - 2*(z10/2 + z12/2)*(z11*z9/2 + 1/2) + 2*(z10/2 + z2/2)*(z1*z9/2 + 1/2) + 2*(3*z10/2 - 3*z12/2)*(z11/2 - z9/2) + 2*(3*z10/2 - 3*z4/2)*(-z3/2 + z9/2) + 2*(3*z10/2 - 3*z6/2)*(-z5/2 + z9/2) - 2*(3*z10/2 - 3*z8/2)*(-z7/2 + z9/2) - 2*(-z11 - z3)*(z12*z4/2 + 1/2) - 2*(-z11 - z5)*(z12*z6/2 + 1/2) + 2*(-z11 - z7)*(z12*z8/2 + 1/2) - 2*(z11 + z9)*(z10*z12/2 + 1/2) + 2*(3*z11/2 - 3*z3/2)*(z12/2 - z4/2) + 2*(3*z11/2 - 3*z5/2)*(z12/2 - z6/2) - 2*(3*z11/2 - 3*z7/2)*(z12/2 - z8/2) + 2*(z12/2 + z2/2)*(z1*z11/2 + 1/2) + 2*(z12/2 + z4/2)*(z11*z3/2 + 1/2) + 2*(z12/2 + z6/2)*(z11*z5/2 + 1/2) - 2*(z12/2 + z8/2)*(z11*z7/2 + 1/2) - 2*(z2/2 + z4/2)*(z1*z3/2 + 1/2) - 2*(z2/2 + z6/2)*(z1*z5/2 + 1/2) + 2*(z2/2 + z8/2)*(z1*z7/2 + 1/2) - 2*(z3 + z5)*(z4*z6/2 + 1/2) + 2*(z3 + z7)*(z4*z8/2 + 1/2) + 2*(z3 + z9)*(z10*z4/2 + 1/2) + 2*(3*z3/2 - 3*z5/2)*(-z4/2 + z6/2) - 2*(3*z3/2 - 3*z7/2)*(-z4/2 + z8/2) - 2*(z4/2 + z6/2)*(z3*z5/2 + 1/2) + 2*(z4/2 + z8/2)*(z3*z7/2 + 1/2) + 2*(z5 + z7)*(z6*z8/2 + 1/2) + 2*(z5 + z9)*(z10*z6/2 + 1/2) - 2*(3*z5/2 - 3*z7/2)*(-z6/2 + z8/2) + 2*(z6/2 + z8/2)*(z5*z7/2 + 1/2) - 2*(z7 + z9)*(z10*z8/2 + 1/2) - 2*(-3*z1*z11/2 + 3/2)*(-z12*z2/2 + 1/2) - 2*(3*z1*z11/2 + 3/2)*(z12*z2/2 + 1/2) - 2*(3*z1*z11 + 3)*(-z12*z2/2 + 1/2) + 2*(-3*z1*z3/2 + 3/2)*(-z2*z4/2 + 1/2) + 2*(3*z1*z3/2 + 3/2)*(z2*z4/2 + 1/2) + 2*(3*z1*z3 + 3)*(-z2*z4/2 + 1/2) + 2*(-3*z1*z5/2 + 3/2)*(-z2*z6/2 + 1/2) + 2*(3*z1*z5/2 + 3/2)*(z2*z6/2 + 1/2) + 2*(3*z1*z5 + 3)*(-z2*z6/2 + 1/2) - 2*(-3*z1*z7/2 + 3/2)*(-z2*z8/2 + 1/2) - 2*(3*z1*z7/2 + 3/2)*(z2*z8/2 + 1/2) - 2*(3*z1*z7 + 3)*(-z2*z8/2 + 1/2) - 2*(-3*z1*z9/2 + 3/2)*(-z10*z2/2 + 1/2) - 2*(3*z1*z9/2 + 3/2)*(z10*z2/2 + 1/2) - 2*(3*z1*z9 + 3)*(-z10*z2/2 + 1/2) + 2*(-3*z10*z12 + 3)*(z11*z9/2 + 1/2) + 2*(-3*z10*z12/2 + 3/2)*(-z11*z9/2 + 1/2) + 2*(3*z10*z12/2 + 3/2)*(z11*z9/2 + 1/2) - 2*(-3*z10*z4 + 3)*(z3*z9/2 + 1/2) - 2*(-3*z10*z4/2 + 3/2)*(-z3*z9/2 + 1/2) - 2*(3*z10*z4/2 + 3/2)*(z3*z9/2 + 1/2) - 2*(-3*z10*z6 + 3)*(z5*z9/2 + 1/2) - 2*(-3*z10*z6/2 + 3/2)*(-z5*z9/2 + 1/2) - 2*(3*z10*z6/2 + 3/2)*(z5*z9/2 + 1/2) + 2*(-3*z10*z8 + 3)*(z7*z9/2 + 1/2) + 2*(-3*z10*z8/2 + 3/2)*(-z7*z9/2 + 1/2) + 2*(3*z10*z8/2 + 3/2)*(z7*z9/2 + 1/2) - 2*(-3*z11*z3/2 + 3/2)*(-z12*z4/2 + 1/2) - 2*(3*z11*z3/2 + 3/2)*(z12*z4/2 + 1/2) - 2*(3*z11*z3 + 3)*(-z12*z4/2 + 1/2) - 2*(-3*z11*z5/2 + 3/2)*(-z12*z6/2 + 1/2) - 2*(3*z11*z5/2 + 3/2)*(z12*z6/2 + 1/2) - 2*(3*z11*z5 + 3)*(-z12*z6/2 + 1/2) + 2*(-3*z11*z7/2 + 3/2)*(-z12*z8/2 + 1/2) + 2*(3*z11*z7/2 + 3/2)*(z12*z8/2 + 1/2) + 2*(3*z11*z7 + 3)*(-z12*z8/2 + 1/2) + 2*(-3*z3*z5/2 + 3/2)*(-z4*z6/2 + 1/2) + 2*(3*z3*z5/2 + 3/2)*(z4*z6/2 + 1/2) + 2*(3*z3*z5 + 3)*(-z4*z6/2 + 1/2) - 2*(-3*z3*z7/2 + 3/2)*(-z4*z8/2 + 1/2) - 2*(3*z3*z7/2 + 3/2)*(z4*z8/2 + 1/2) - 2*(3*z3*z7 + 3)*(-z4*z8/2 + 1/2) - 2*(-3*z5*z7/2 + 3/2)*(-z6*z8/2 + 1/2) - 2*(3*z5*z7/2 + 3/2)*(z6*z8/2 + 1/2) - 2*(3*z5*z7 + 3)*(-z6*z8/2 + 1/2) + 18

Cp Numerical Expressions:  (-(1/2 - z1/2)*(1/2 - z2/2) + (1/2 - z10/2)*(1/2 - z9/2) + (1/2 - z11/2)*(1/2 - z12/2) - (1/2 - z3/2)*(1/2 - z4/2) - (1/2 - z5/2)*(1/2 - z6/2) + (1/2 - z7/2)*(1/2 - z8/2))**2 + (-(1/2 - z1/2)*(z2/2 + 1/2) + (1/2 - z11/2)*(z12/2 + 1/2) - (1/2 - z3/2)*(z4/2 + 1/2) - (1/2 - z5/2)*(z6/2 + 1/2) + (1/2 - z7/2)*(z8/2 + 1/2) + (1/2 - z9/2)*(z10/2 + 1/2))**2 + ((1/2 - z10/2)*(z9/2 + 1/2) + (1/2 - z12/2)*(z11/2 + 1/2) - (1/2 - z2/2)*(z1/2 + 1/2) - (1/2 - z4/2)*(z3/2 + 1/2) - (1/2 - z6/2)*(z5/2 + 1/2) + (1/2 - z8/2)*(z7/2 + 1/2))**2 + (-(z1/2 + 1/2)*(z2/2 + 1/2) + (z10/2 + 1/2)*(z9/2 + 1/2) + (z11/2 + 1/2)*(z12/2 + 1/2) - (z3/2 + 1/2)*(z4/2 + 1/2) - (z5/2 + 1/2)*(z6/2 + 1/2) + (z7/2 + 1/2)*(z8/2 + 1/2))**2

Pre-Qudratized Expression:  1.0*z1**2*z2**2 + 1.0*z1**2 - 2.0*z1*z10*z2*z9 + 1.0*z1*z10*z2 + 0.5*z1*z10*z9 - 1.5*z1*z10 - 2.0*z1*z11*z12*z2 + 0.5*z1*z11*z12 + 0.5*z1*z11*z2 - 5.0*z1*z11 + 1.0*z1*z12*z2 - 1.5*z1*z12 + 2.0*z1*z2*z3*z4 - 0.5*z1*z2*z3 - 1.0*z1*z2*z4 + 2.0*z1*z2*z5*z6 - 0.5*z1*z2*z5 - 1.0*z1*z2*z6 - 2.0*z1*z2*z7*z8 + 0.5*z1*z2*z7 + 1.0*z1*z2*z8 + 0.5*z1*z2*z9 + 1.5*z1*z2 - 0.5*z1*z3*z4 + 5.0*z1*z3 + 1.5*z1*z4 - 0.5*z1*z5*z6 + 5.0*z1*z5 + 1.5*z1*z6 + 0.5*z1*z7*z8 - 5.0*z1*z7 - 1.5*z1*z8 - 5.0*z1*z9 - 1.0*z1 + 1.0*z10**2*z9**2 + 1.0*z10**2 + 2.0*z10*z11*z12*z9 - 1.0*z10*z11*z12 - 0.5*z10*z11*z9 + 1.5*z10*z11 - 1.0*z10*z12*z9 - 1.0*z10*z12 + 1.0*z10*z2*z9 + 1.0*z10*z2 - 2.0*z10*z3*z4*z9 + 1.0*z10*z3*z4 + 0.5*z10*z3*z9 - 1.5*z10*z3 + 1.0*z10*z4*z9 + 1.0*z10*z4 - 2.0*z10*z5*z6*z9 + 1.0*z10*z5*z6 + 0.5*z10*z5*z9 - 1.5*z10*z5 + 1.0*z10*z6*z9 + 1.0*z10*z6 + 2.0*z10*z7*z8*z9 - 1.0*z10*z7*z8 - 0.5*z10*z7*z9 + 1.5*z10*z7 - 1.0*z10*z8*z9 - 1.0*z10*z8 + 1.5*z10*z9 - 0.5*z10 + 1.0*z11**2*z12**2 + 1.0*z11**2 + 1.0*z11*z12*z2 - 2.0*z11*z12*z3*z4 + 0.5*z11*z12*z3 + 1.0*z11*z12*z4 - 2.0*z11*z12*z5*z6 + 0.5*z11*z12*z5 + 1.0*z11*z12*z6 + 2.0*z11*z12*z7*z8 - 0.5*z11*z12*z7 - 1.0*z11*z12*z8 - 0.5*z11*z12*z9 + 1.5*z11*z12 - 1.5*z11*z2 + 0.5*z11*z3*z4 - 5.0*z11*z3 - 1.5*z11*z4 + 0.5*z11*z5*z6 - 5.0*z11*z5 - 1.5*z11*z6 - 0.5*z11*z7*z8 + 5.0*z11*z7 + 1.5*z11*z8 + 5.0*z11*z9 - 1.0*z11 + 1.0*z12**2 + 1.0*z12*z2 + 1.0*z12*z3*z4 - 1.5*z12*z3 + 1.0*z12*z4 + 1.0*z12*z5*z6 - 1.5*z12*z5 + 1.0*z12*z6 - 1.0*z12*z7*z8 + 1.5*z12*z7 - 1.0*z12*z8 + 1.5*z12*z9 - 0.5*z12 + 1.0*z2**2 - 1.0*z2*z3*z4 + 1.5*z2*z3 - 1.0*z2*z4 - 1.0*z2*z5*z6 + 1.5*z2*z5 - 1.0*z2*z6 + 1.0*z2*z7*z8 - 1.5*z2*z7 + 1.0*z2*z8 - 1.5*z2*z9 - 0.5*z2 + 1.0*z3**2*z4**2 + 1.0*z3**2 + 2.0*z3*z4*z5*z6 - 0.5*z3*z4*z5 - 1.0*z3*z4*z6 - 2.0*z3*z4*z7*z8 + 0.5*z3*z4*z7 + 1.0*z3*z4*z8 + 0.5*z3*z4*z9 + 1.5*z3*z4 - 0.5*z3*z5*z6 + 5.0*z3*z5 + 1.5*z3*z6 + 0.5*z3*z7*z8 - 5.0*z3*z7 - 1.5*z3*z8 - 5.0*z3*z9 - 1.0*z3 + 1.0*z4**2 - 1.0*z4*z5*z6 + 1.5*z4*z5 - 1.0*z4*z6 + 1.0*z4*z7*z8 - 1.5*z4*z7 + 1.0*z4*z8 - 1.5*z4*z9 - 0.5*z4 + 1.0*z5**2*z6**2 + 1.0*z5**2 - 2.0*z5*z6*z7*z8 + 0.5*z5*z6*z7 + 1.0*z5*z6*z8 + 0.5*z5*z6*z9 + 1.5*z5*z6 + 0.5*z5*z7*z8 - 5.0*z5*z7 - 1.5*z5*z8 - 5.0*z5*z9 - 1.0*z5 + 1.0*z6**2 + 1.0*z6*z7*z8 - 1.5*z6*z7 + 1.0*z6*z8 - 1.5*z6*z9 - 0.5*z6 + 1.0*z7**2*z8**2 + 1.0*z7**2 - 0.5*z7*z8*z9 + 1.5*z7*z8 + 5.0*z7*z9 - 1.0*z7 + 1.0*z8**2 + 1.5*z8*z9 - 0.5*z8 + 1.0*z9**2 - 1.0*z9

Quadratized Expression:  3221.0*b1*b10 - 32.0*b1*b11 + 3221.0*b1*b12 - 6482.0*b1*b13 - 6482.0*b1*b14 - 6482.0*b1*b15 + 3233.0*b1*b2 - 20.0*b1*b25 - 20.0*b1*b27 - 6482.0*b1*b29 + 32.0*b1*b3 + 20.0*b1*b4 + 32.0*b1*b5 + 20.0*b1*b6 + 3209.0*b1*b7 - 20.0*b1*b8 - 32.0*b1*b9 + 16.0*b1 + 3261.0*b10*b11 + 3253.0*b10*b12 - 6482.0*b10*b13 - 6482.0*b10*b16 - 6482.0*b10*b17 - 6482.0*b10*b18 - 6482.0*b10*b19 + 3229.0*b10*b2 - 6482.0*b10*b20 + 3217.0*b10*b21 + 3221.0*b10*b3 - 6482.0*b10*b32 - 6482.0*b10*b33 - 6482.0*b10*b34 - 6482.0*b10*b36 + 3229.0*b10*b4 - 6482.0*b10*b43 + 3221.0*b10*b5 + 3229.0*b10*b6 + 3261.0*b10*b7 + 3253.0*b10*b8 - 8.0*b10*b9 + 6.0*b10 + 3233.0*b11*b12 + 3261.0*b11*b14 + 20.0*b11*b15 - 20.0*b11*b2 - 6482.0*b11*b21 + 20.0*b11*b25 + 20.0*b11*b27 - 32.0*b11*b3 - 6482.0*b11*b36 - 6482.0*b11*b37 - 20.0*b11*b4 - 6482.0*b11*b40 - 32.0*b11*b5 - 20.0*b11*b6 + 3273.0*b11*b7 + 20.0*b11*b8 + 32.0*b11*b9 + 16.0*b11 - 6482.0*b12*b14 - 12.0*b12*b2 - 6482.0*b12*b21 - 6482.0*b12*b22 - 6482.0*b12*b23 + 3221.0*b12*b3 - 6482.0*b12*b32 - 6482.0*b12*b35 - 12.0*b12*b4 + 3221.0*b12*b5 - 12.0*b12*b6 + 3261.0*b12*b7 + 12.0*b12*b8 + 20.0*b12*b9 + 6.0*b12 + 3265.0*b13*b2 - 6482.0*b13*b39 + 20.0*b13*b9 + 9723.0*b13 + 24.0*b14*b2 - 6482.0*b14*b40 + 9723.0*b14 - 6482.0*b15*b2 + 32.0*b15*b25 + 32.0*b15*b27 - 20.0*b15*b3 - 32.0*b15*b38 - 24.0*b15*b4 - 20.0*b15*b5 - 24.0*b15*b6 + 20.0*b15*b7 + 24.0*b15*b8 + 20.0*b15*b9 + 9723.0*b15 - 6482.0*b16*b2 + 24.0*b16*b9 + 9723.0*b16 - 6482.0*b17*b3 + 3265.0*b17*b4 - 6482.0*b17*b41 + 20.0*b17*b9 + 9723.0*b17 - 6482.0*b18*b4 + 24.0*b18*b9 + 9723.0*b18 - 6482.0*b19*b42 - 6482.0*b19*b5 + 3265.0*b19*b6 + 20.0*b19*b9 + 9723.0*b19 + 24.0*b2*b21 - 6482.0*b2*b24 - 24.0*b2*b25 - 24.0*b2*b27 + 20.0*b2*b3 - 6482.0*b2*b39 + 12.0*b2*b4 - 32.0*b2*b40 + 20.0*b2*b5 + 12.0*b2*b6 + 3221.0*b2*b7 - 12.0*b2*b8 - 20.0*b2*b9 + 6.0*b2 - 6482.0*b20*b6 + 24.0*b20*b9 + 9723.0*b20 - 32.0*b21*b25 - 32.0*b21*b27 + 20.0*b21*b3 + 32.0*b21*b38 + 24.0*b21*b4 - 6482.0*b21*b43 + 20.0*b21*b5 + 24.0*b21*b6 - 20.0*b21*b7 - 24.0*b21*b8 - 20.0*b21*b9 + 9723.0*b21 - 6482.0*b22*b3 + 24.0*b22*b4 + 9723.0*b22 - 6482.0*b23*b5 + 24.0*b23*b6 + 9723.0*b23 - 6482.0*b24*b7 + 24.0*b24*b8 + 9723.0*b24 + 32.0*b25*b27 - 6482.0*b25*b3 - 32.0*b25*b38 - 6482.0*b25*b4 - 20.0*b25*b5 - 24.0*b25*b6 + 20.0*b25*b7 + 24.0*b25*b8 + 20.0*b25*b9 + 9723.0*b25 - 6482.0*b26*b4 - 6482.0*b26*b7 + 24.0*b26*b8 + 9723.0*b26 - 20.0*b27*b3 - 32.0*b27*b38 - 24.0*b27*b4 - 6482.0*b27*b5 - 6482.0*b27*b6 + 20.0*b27*b7 + 24.0*b27*b8 + 20.0*b27*b9 + 9723.0*b27 - 6482.0*b28*b6 - 6482.0*b28*b7 + 24.0*b28*b8 + 9723.0*b28 - 6482.0*b29*b7 + 20.0*b29*b8 + 9723.0*b29 - 6482.0*b3*b30 + 3233.0*b3*b4 + 32.0*b3*b5 + 20.0*b3*b6 + 3209.0*b3*b7 - 20.0*b3*b8 - 32.0*b3*b9 + 16.0*b3 - 6482.0*b30*b7 + 20.0*b30*b8 + 9723.0*b30 - 6482.0*b31*b5 - 6482.0*b31*b7 + 20.0*b31*b8 + 9723.0*b31 - 24.0*b32*b9 + 9723.0*b32 - 6482.0*b33*b44 - 6482.0*b33*b7 + 3217.0*b33*b8 - 20.0*b33*b9 + 9723.0*b33 - 6482.0*b34*b8 - 24.0*b34*b9 + 9723.0*b34 - 6482.0*b35*b7 - 24.0*b35*b8 + 9723.0*b35 - 20.0*b36*b9 + 9723.0*b36 - 6482.0*b37*b7 - 20.0*b37*b8 + 9723.0*b37 - 6482.0*b38*b7 - 6482.0*b38*b8 - 20.0*b38*b9 + 9723.0*b38 - 32.0*b39*b9 + 9723.0*b39 - 6482.0*b4*b41 + 20.0*b4*b5 + 12.0*b4*b6 + 3221.0*b4*b7 - 12.0*b4*b8 - 20.0*b4*b9 + 6.0*b4 + 9723.0*b40 - 32.0*b41*b9 + 9723.0*b41 - 6482.0*b42*b6 - 32.0*b42*b9 + 9723.0*b42 + 32.0*b43*b9 + 9723.0*b43 - 6482.0*b44*b8 + 32.0*b44*b9 + 9723.0*b44 + 3233.0*b5*b6 + 3209.0*b5*b7 - 20.0*b5*b8 - 32.0*b5*b9 + 16.0*b5 + 3221.0*b6*b7 - 12.0*b6*b8 - 20.0*b6*b9 + 6.0*b6 + 3233.0*b7*b8 + 32.0*b7*b9 + 16.0*b7 + 20.0*b8*b9 + 6.0*b8 + 16.0*b9

Final BQM:  BinaryQuadraticModel({'b1': 16.0, 'b3': 16.0, 'b5': 16.0, 'b11': 16.0, 'b9': 16.0, 'b15': 9723.0, 'b25': 9723.0, 'b27': 9723.0, 'b21': 9723.0, 'b38': 9723.0, 'b43': 9723.0, 'b44': 9723.0, 'b7': 16.0, 'b12': 6.0, 'b8': 6.0, 'b2': 6.0, 'b4': 6.0, 'b6': 6.0, 'b14': 9723.0, 'b16': 9723.0, 'b18': 9723.0, 'b20': 9723.0, 'b22': 9723.0, 'b23': 9723.0, 'b24': 9723.0, 'b26': 9723.0, 'b28': 9723.0, 'b13': 9723.0, 'b17': 9723.0, 'b19': 9723.0, 'b29': 9723.0, 'b30': 9723.0, 'b31': 9723.0, 'b10': 6.0, 'b33': 9723.0, 'b40': 9723.0, 'b39': 9723.0, 'b41': 9723.0, 'b42': 9723.0, 'b32': 9723.0, 'b34': 9723.0, 'b35': 9723.0, 'b36': 9723.0, 'b37': 9723.0}, {('b3', 'b1'): 32.0, ('b5', 'b1'): 32.0, ('b5', 'b3'): 32.0, ('b11', 'b1'): -32.0, ('b11', 'b3'): -32.0, ('b11', 'b5'): -32.0, ('b9', 'b1'): -32.0, ('b9', 'b3'): -32.0, ('b9', 'b5'): -32.0, ('b9', 'b11'): 32.0, ('b15', 'b1'): -6482.0, ('b15', 'b3'): -20.0, ('b15', 'b5'): -20.0, ('b15', 'b11'): 20.0, ('b15', 'b9'): 20.0, ('b25', 'b1'): -20.0, ('b25', 'b3'): -6482.0, ('b25', 'b5'): -20.0, ('b25', 'b11'): 20.0, ('b25', 'b9'): 20.0, ('b25', 'b15'): 32.0, ('b27', 'b1'): -20.0, ('b27', 'b3'): -20.0, ('b27', 'b5'): -6482.0, ('b27', 'b11'): 20.0, ('b27', 'b9'): 20.0, ('b27', 'b15'): 32.0, ('b27', 'b25'): 32.0, ('b21', 'b3'): 20.0, ('b21', 'b5'): 20.0, ('b21', 'b11'): -6482.0, ('b21', 'b9'): -20.0, ('b21', 'b25'): -32.0, ('b21', 'b27'): -32.0, ('b38', 'b9'): -20.0, ('b38', 'b15'): -32.0, ('b38', 'b25'): -32.0, ('b38', 'b27'): -32.0, ('b38', 'b21'): 32.0, ('b43', 'b9'): 32.0, ('b43', 'b21'): -6482.0, ('b44', 'b9'): 32.0, ('b7', 'b1'): 3209.0, ('b7', 'b3'): 3209.0, ('b7', 'b5'): 3209.0, ('b7', 'b11'): 3273.0, ('b7', 'b9'): 32.0, ('b7', 'b15'): 20.0, ('b7', 'b25'): 20.0, ('b7', 'b27'): 20.0, ('b7', 'b21'): -20.0, ('b7', 'b38'): -6482.0, ('b12', 'b1'): 3221.0, ('b12', 'b3'): 3221.0, ('b12', 'b5'): 3221.0, ('b12', 'b11'): 3233.0, ('b12', 'b9'): 20.0, ('b12', 'b21'): -6482.0, ('b12', 'b7'): 3261.0, ('b8', 'b1'): -20.0, ('b8', 'b3'): -20.0, ('b8', 'b5'): -20.0, ('b8', 'b11'): 20.0, ('b8', 'b9'): 20.0, ('b8', 'b15'): 24.0, ('b8', 'b25'): 24.0, ('b8', 'b27'): 24.0, ('b8', 'b21'): -24.0, ('b8', 'b38'): -6482.0, ('b8', 'b44'): -6482.0, ('b8', 'b7'): 3233.0, ('b8', 'b12'): 12.0, ('b2', 'b1'): 3233.0, ('b2', 'b3'): 20.0, ('b2', 'b5'): 20.0, ('b2', 'b11'): -20.0, ('b2', 'b9'): -20.0, ('b2', 'b15'): -6482.0, ('b2', 'b25'): -24.0, ('b2', 'b27'): -24.0, ('b2', 'b21'): 24.0, ('b2', 'b7'): 3221.0, ('b2', 'b12'): -12.0, ('b2', 'b8'): -12.0, ('b4', 'b1'): 20.0, ('b4', 'b3'): 3233.0, ('b4', 'b5'): 20.0, ('b4', 'b11'): -20.0, ('b4', 'b9'): -20.0, ('b4', 'b15'): -24.0, ('b4', 'b25'): -6482.0, ('b4', 'b27'): -24.0, ('b4', 'b21'): 24.0, ('b4', 'b7'): 3221.0, ('b4', 'b12'): -12.0, ('b4', 'b8'): -12.0, ('b4', 'b2'): 12.0, ('b6', 'b1'): 20.0, ('b6', 'b3'): 20.0, ('b6', 'b5'): 3233.0, ('b6', 'b11'): -20.0, ('b6', 'b9'): -20.0, ('b6', 'b15'): -24.0, ('b6', 'b25'): -24.0, ('b6', 'b27'): -6482.0, ('b6', 'b21'): 24.0, ('b6', 'b7'): 3221.0, ('b6', 'b12'): -12.0, ('b6', 'b8'): -12.0, ('b6', 'b2'): 12.0, ('b6', 'b4'): 12.0, ('b14', 'b1'): -6482.0, ('b14', 'b11'): 3261.0, ('b14', 'b12'): -6482.0, ('b14', 'b2'): 24.0, ('b16', 'b9'): 24.0, ('b16', 'b2'): -6482.0, ('b18', 'b9'): 24.0, ('b18', 'b4'): -6482.0, ('b20', 'b9'): 24.0, ('b20', 'b6'): -6482.0, ('b22', 'b3'): -6482.0, ('b22', 'b12'): -6482.0, ('b22', 'b4'): 24.0, ('b23', 'b5'): -6482.0, ('b23', 'b12'): -6482.0, ('b23', 'b6'): 24.0, ('b24', 'b7'): -6482.0, ('b24', 'b8'): 24.0, ('b24', 'b2'): -6482.0, ('b26', 'b7'): -6482.0, ('b26', 'b8'): 24.0, ('b26', 'b4'): -6482.0, ('b28', 'b7'): -6482.0, ('b28', 'b8'): 24.0, ('b28', 'b6'): -6482.0, ('b13', 'b1'): -6482.0, ('b13', 'b9'): 20.0, ('b13', 'b2'): 3265.0, ('b17', 'b3'): -6482.0, ('b17', 'b9'): 20.0, ('b17', 'b4'): 3265.0, ('b19', 'b5'): -6482.0, ('b19', 'b9'): 20.0, ('b19', 'b6'): 3265.0, ('b29', 'b1'): -6482.0, ('b29', 'b7'): -6482.0, ('b29', 'b8'): 20.0, ('b30', 'b3'): -6482.0, ('b30', 'b7'): -6482.0, ('b30', 'b8'): 20.0, ('b31', 'b5'): -6482.0, ('b31', 'b7'): -6482.0, ('b31', 'b8'): 20.0, ('b10', 'b1'): 3221.0, ('b10', 'b3'): 3221.0, ('b10', 'b5'): 3221.0, ('b10', 'b11'): 3261.0, ('b10', 'b9'): -8.0, ('b10', 'b21'): 3217.0, ('b10', 'b43'): -6482.0, ('b10', 'b7'): 3261.0, ('b10', 'b12'): 3253.0, ('b10', 'b8'): 3253.0, ('b10', 'b2'): 3229.0, ('b10', 'b4'): 3229.0, ('b10', 'b6'): 3229.0, ('b10', 'b16'): -6482.0, ('b10', 'b18'): -6482.0, ('b10', 'b20'): -6482.0, ('b10', 'b13'): -6482.0, ('b10', 'b17'): -6482.0, ('b10', 'b19'): -6482.0, ('b33', 'b9'): -20.0, ('b33', 'b44'): -6482.0, ('b33', 'b7'): -6482.0, ('b33', 'b8'): 3217.0, ('b33', 'b10'): -6482.0, ('b40', 'b11'): -6482.0, ('b40', 'b2'): -32.0, ('b40', 'b14'): -6482.0, ('b39', 'b9'): -32.0, ('b39', 'b2'): -6482.0, ('b39', 'b13'): -6482.0, ('b41', 'b9'): -32.0, ('b41', 'b4'): -6482.0, ('b41', 'b17'): -6482.0, ('b42', 'b9'): -32.0, ('b42', 'b6'): -6482.0, ('b42', 'b19'): -6482.0, ('b32', 'b9'): -24.0, ('b32', 'b12'): -6482.0, ('b32', 'b10'): -6482.0, ('b34', 'b9'): -24.0, ('b34', 'b8'): -6482.0, ('b34', 'b10'): -6482.0, ('b35', 'b7'): -6482.0, ('b35', 'b12'): -6482.0, ('b35', 'b8'): -24.0, ('b36', 'b11'): -6482.0, ('b36', 'b9'): -20.0, ('b36', 'b10'): -6482.0, ('b37', 'b11'): -6482.0, ('b37', 'b7'): -6482.0, ('b37', 'b8'): -20.0}, 0.0, 'BINARY')

Sign Values:  [-1, -1, -1, 1, 1, 1]

Number of New Groups:  6

Number of Original Variables:  12

Cp Numerical Expressions:  (-(1/2 - z1/2)*(1/2 - z2/2) + (1/2 - z10/2)*(1/2 - z9/2) + (1/2 - z11/2)*(1/2 - z12/2) - (1/2 - z3/2)*(1/2 - z4/2) - (1/2 - z5/2)*(1/2 - z6/2) + (1/2 - z7/2)*(1/2 - z8/2))**2 + (-(1/2 - z1/2)*(z2/2 + 1/2) + (1/2 - z11/2)*(z12/2 + 1/2) - (1/2 - z3/2)*(z4/2 + 1/2) - (1/2 - z5/2)*(z6/2 + 1/2) + (1/2 - z7/2)*(z8/2 + 1/2) + (1/2 - z9/2)*(z10/2 + 1/2))**2 + ((1/2 - z10/2)*(z9/2 + 1/2) + (1/2 - z12/2)*(z11/2 + 1/2) - (1/2 - z2/2)*(z1/2 + 1/2) - (1/2 - z4/2)*(z3/2 + 1/2) - (1/2 - z6/2)*(z5/2 + 1/2) + (1/2 - z8/2)*(z7/2 + 1/2))**2 + (-(z1/2 + 1/2)*(z2/2 + 1/2) + (z10/2 + 1/2)*(z9/2 + 1/2) + (z11/2 + 1/2)*(z12/2 + 1/2) - (z3/2 + 1/2)*(z4/2 + 1/2) - (z5/2 + 1/2)*(z6/2 + 1/2) + (z7/2 + 1/2)*(z8/2 + 1/2))**2

Original Variables:  {z8, z6, z4, z12, z3, z11, z5, z7, z9, z2, z1, z10}

Lambda:  -4
################# BQM GENERATED #################